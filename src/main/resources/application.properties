spring.application.name=userservice

# ============================
# PostgreSQL Datasource
# Use as variáveis de ambiente para trocar facilmente as credenciais.
# Exemplos (Windows PowerShell):
#   $env:DB_URL="jdbc:postgresql://localhost:5432/usersdb"
#   $env:DB_USERNAME="postgres"
#   $env:DB_PASSWORD="postgres"
#   $env:JPA_DDL_AUTO="update"   # ou: validate | none | create | create-drop
# ============================

# URL do banco (sobrescrevível via env DB_URL)
spring.datasource.url=jdbc:postgresql://localhost:5432/usersdb

# Credenciais (sobrescrevíveis via env DB_USERNAME / DB_PASSWORD)
spring.datasource.username=postgres
spring.datasource.password=password

# Driver explícito
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool (Hikari) – ajuste conforme seu ambiente
# spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:10}

# ============================
# JPA / Hibernate
# ============================
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}
spring.jpa.properties.hibernate.jdbc.time_zone=${JDBC_TIME_ZONE:UTC}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Recomenda-se desativar Open-in-View em APIs
spring.jpa.open-in-view=false

# ============================
# Serviço de Autenticação (cliente HTTP)
# Base URL do serviço de auth; pode ser sobrescrita por env AUTH_SERVICE_BASE_URL
auth.service.base-url=${AUTH_SERVICE_BASE_URL:http://localhost:8081}
